{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Message","props","message","src","alt","DialogItem","path","id","className","s","dialog","active","to","name","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","dialogsElements","dialogPage","dialogs","map","d","key","messagesElements","messages","m","isAuth","dialogsItems","values","newMessageBody","sendMessage","DialogsContainer","compose","withAuthRedirect","connect","state","dispatch","AddMessageActionCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,2B,oFCsBnKC,MAdf,SAAiBC,GACb,OACI,6BACKA,EAAMC,QACP,yBACIC,IAAI,mYACJC,IAAK,c,0BCWNC,MAdf,SAAqBJ,GACjB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOL,EAAMY,Q,yCCEhCC,EAAYC,YAAiB,KAsD7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUV,KAAK,iBAAiBW,YAAY,qBACtDC,SAAU,CAACC,IAASZ,MAGhC,6BACI,6CAUDa,EAtDC,SAAC1B,GACb,IAAM2B,EAAkB3B,EAAM4B,WAAWC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMN,GAAIyB,EAAEzB,GAAI0B,IAAKD,EAAEzB,QAC/F2B,EAAmBjC,EAAM4B,WAAWM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASlC,QAASkC,EAAElC,QAASK,GAAI6B,EAAE7B,GAAI0B,IAAKG,EAAE7B,QAG1G,GAAIN,EAAMoC,OAAQ,OAAO,kBAAC,IAAD,CAAUzB,GAAI,WAcvC,OAEI,yBAAKJ,UAAWC,IAAEqB,SACd,yBAAKtB,UAAWC,IAAE6B,cACbV,GAEL,yBAAKpB,UAAWC,IAAE0B,UACbD,GAEL,kBAAClB,EAAD,CAAqBG,SAfT,SAACoB,GALI,IAACrC,IAMHqC,EAAOC,eAL1BvC,EAAMwC,YAAYvC,Q,QCOpBwC,EAAkBC,YACpBC,IACAC,aApBoB,SAACC,GACrB,MAAO,CACHjB,WAAYiB,EAAMjB,eAIC,SAACkB,GACxB,MAAO,CAEHN,YAAa,SAACvC,GACV6C,EAASC,YAAwB9C,SAQrByC,CAGtBhB,GAEae","file":"static/js/4.777a55df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__IiLfP\",\"avatar\":\"Dialogs_avatar__23Jsv\",\"dialogsItems\":\"Dialogs_dialogsItems__3c1Xb\",\"messages\":\"Dialogs_messages__RVtqM\",\"message\":\"Dialogs_message__2eNku\"};","import React from \"react\";\r\n\r\n\r\ntype MessagesPropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nfunction Message(props: MessagesPropsType) {\r\n    return (\r\n        <div>\r\n            {props.message}\r\n            <img\r\n                src='https://www.google.com/imgres?imgurl=https%3A%2F%2Fwow.zamimg.com%2Fuploads%2Fscreenshots%2Fnormal%2F661494-battle-net-avatars.jpg&imgrefurl=https%3A%2F%2Fwww.wowhead.com%2Fgallery%3D648%2Fbattle-net-avatars&tbnid=jqqVa82t7Uw6IM&vet=12ahUKEwj6xZ6XrqXvAhUDvSoKHUmkCSsQMygAegUIARCUAQ..i&docid=lOX_sYxjRXCjRM&w=256&h=256&q=net%20avatar&ved=2ahUKEwj6xZ6XrqXvAhUDvSoKHUmkCSsQMygAegUIARCUAQ'\r\n                alt={\"message\"}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogsPropsType={\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\n\r\n\r\nfunction DialogItem (props:DialogsPropsType){\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogsPageType} from '../../redux/dialogs-reducer';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {TextArea} from \"../common/FormsControls/TextArea\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\ntype DialogPageTypes = {\r\n    sendMessage: (message: string) => void\r\n    dialogPage: DialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nconst maxLength = maxLengthCreator(200)\r\n\r\nconst Dialogs = (props: DialogPageTypes) => {\r\n    const dialogsElements = props.dialogPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    const messagesElements = props.dialogPage.messages.map(m => <Message message={m.message} id={m.id} key={m.id}/>);\r\n\r\n\r\n    if (props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n\r\n    let onSendMessageClick = (message: string) => {\r\n        props.sendMessage(message)\r\n    }\r\n\r\n\r\n    let addNewMessage = (values: any) => {\r\n        onSendMessageClick(values.newMessageBody)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name='newMessageBody' placeholder='Enter your message'\r\n                        validate={[required,maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {AddMessageActionCreator, DialogsPageType} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from 'redux';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\ntype MapStatePropsType={\r\n    dialogPage: DialogsPageType\r\n\r\n}\r\ntype MapDispatchPropsType= {\r\n    sendMessage: (message: string) => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStatePropsType => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MapDispatchPropsType => {\r\n    return {\r\n\r\n        sendMessage: (message: string) => {\r\n            dispatch(AddMessageActionCreator(message))\r\n        },\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DialogsContainer =compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer"],"sourceRoot":""}